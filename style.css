<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Manual do Aprovado - Diagn√≥stico Interativo</title>
  <link rel="stylesheet" href="style.css" />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700;900&display=swap" rel="stylesheet">
</head>
<body>
  <div class="background"></div>
  <header>
    <div class="header-glass">
      <span class="avatar">üìò</span>
      <h1>Manual do Aprovado</h1>
      <span class="subtitle">Diagn√≥stico Interativo</span>
    </div>
  </header>
  <main>
    <div class="card-glass" id="quiz-card">
      <!-- Fluxo renderizado aqui -->
    </div>
    <div id="progress-bar-container">
      <div id="progress-bar"></div>
    </div>
  </main>
  <footer>
    <span>¬© 2025 Manual do Aprovado</span>
    <a href="https://instagram.com/pg_concursos_" target="_blank">@pg_concursos_</a>
  </footer>
  <script>
    // ====== FLUXO L√ìGICO ======
    const steps = [
      // Nome
      {
        id: 0,
        question: "Antes de come√ßar, como voc√™ gostaria de ser chamado(a)?",
        type: "input",
        inputPlaceholder: "Digite seu nome aqui",
        next: 1,
      },
      // Sente-se perdido?
      {
        id: 1,
        question: (state) => `Ol√°, ${state.nome || "concurseiro(a)"}! Voc√™ sente que est√° perdido(a) nos estudos ou tem d√∫vidas sobre como avan√ßar?`,
        options: [
          { text: "Sim, me sinto perdido(a)", next: 2 },
          { text: "N√£o, estou seguro(a)", next: 4 }
        ],
      },
      // Se perdido
      {
        id: 2,
        question: "Fique tranquilo(a), voc√™ n√£o est√° sozinho(a)! A maioria dos iniciantes sente isso. Quer saber o erro mais comum de quem se sente perdido?",
        options: [
          { text: "Quero saber", next: 3 }
        ],
      },
      // Mostra erro comum e avan√ßa
      {
        id: 3,
        question: "O maior erro √© tentar estudar de tudo ao mesmo tempo, sem dire√ß√£o e m√©todo. Voc√™ j√° tentou montar um ciclo de estudos (sequ√™ncia flex√≠vel de mat√©rias)?",
        options: [
          { text: "Sim, mas n√£o funcionou", next: 5 },
          { text: "Nunca tentei", next: 5 }
        ]
      },
      // Se n√£o est√° perdido, avan√ßa para ciclo
      {
        id: 4,
        question: "√ìtimo! Voc√™ j√° tem um ciclo de estudos organizado (exemplo: sequ√™ncia de mat√©rias, revis√µes e quest√µes todo dia)?",
        options: [
          { text: "Sim, tenho ciclo", next: 6 },
          { text: "N√£o, estudo de forma solta", next: 5 }
        ]
      },
      // Se n√£o tem ciclo
      {
        id: 5,
        question: "Estudar sem um ciclo √© como correr sem dire√ß√£o. O ciclo de estudos √© a maior diferen√ßa entre quem s√≥ acumula conte√∫do e quem realmente evolui. Sabe como funciona uma boa revis√£o para concurso?",
        options: [
          { text: "Sim, sei revisar", next: 7 },
          { text: "N√£o sei revisar direito", next: 8 }
        ]
      },
      // Se tem ciclo, pergunta de revis√£o
      {
        id: 6,
        question: "Voc√™ faz revis√µes regulares que realmente funcionam (sem confus√£o ou ac√∫mulo de resumos)?",
        options: [
          { text: "Sim, reviso bem", next: 9 },
          { text: "N√£o, minha revis√£o √© ruim", next: 8 }
        ]
      },
      // Se n√£o sabe revisar direito
      {
        id: 7,
        question: "A revis√£o eficaz n√£o √© repetir resumo nem decorar. √â voltar aos pontos-chave e revisar sempre com base no que mais cai! Agora, voc√™ resolve quest√µes TODO DIA ou s√≥ quando sobra tempo?",
        options: [
          { text: "Todo dia", next: 10 },
          { text: "S√≥ quando sobra tempo", next: 11 },
          { text: "Quase nunca", next: 11 }
        ]
      },
      // Se revis√£o √© ruim
      {
        id: 8,
        question: "Esse √© o maior gargalo dos iniciantes: revisar errado faz voc√™ esquecer tudo, mesmo estudando. O m√©todo certo √© leve e eficiente. Falando nisso, resolver quest√µes √© parte do seu dia?",
        options: [
          { text: "Sim, todo dia", next: 10 },
          { text: "S√≥ √†s vezes", next: 11 },
          { text: "Quase nunca", next: 11 }
        ]
      },
      // Se revisa bem, pergunta de quest√µes
      {
        id: 9,
        question: "√ìtimo! E sobre quest√µes: voc√™ resolve de forma ativa, acompanhando o pr√≥prio desempenho e aprendendo com erros?",
        options: [
          { text: "Sim, acompanho tudo", next: 12 },
          { text: "N√£o, fa√ßo sem controle", next: 13 }
        ]
      },
      // Se faz quest√µes sempre
      {
        id: 10,
        question: "Excelente h√°bito! Voc√™ se sente seguro(a) na escolha dos materiais (PDF, videoaula, site de quest√µes) ou fica na d√∫vida?",
        options: [
          { text: "Me sinto seguro(a)", next: 14 },
          { text: "Sempre fico na d√∫vida", next: 15 }
        ]
      },
      // Se quase nunca faz quest√µes
      {
        id: 11,
        question: "Resolver quest√µes TODO DIA √© o que realmente faz o conte√∫do grudar. Sem isso, fica dif√≠cil evoluir de verdade. Sobre os materiais: tem confian√ßa nas escolhas?",
        options: [
          { text: "Sim, escolho bem", next: 14 },
          { text: "Tenho d√∫vidas", next: 15 }
        ]
      },
      // Se acompanha desempenho
      {
        id: 12,
        question: "Top! Agora, √∫ltima etapa: voc√™ j√° escolheu uma √°rea/cargo espec√≠fico para focar, ou ainda atira para todos os lados?",
        options: [
          { text: "J√° tenho foco", next: 16 },
          { text: "Ainda estou atirando pra todo lado", next: 17 }
        ]
      },
      // Se faz quest√µes sem controle
      {
        id: 13,
        question: "Ficar s√≥ resolvendo quest√µes sem estrat√©gia √© perder tempo. O segredo √© analisar erros e acertos, sempre. Sobre a escolha de √°rea/cargo: voc√™ j√° definiu?",
        options: [
          { text: "Sim, j√° defini", next: 16 },
          { text: "Ainda n√£o", next: 17 }
        ]
      },
      // Se materiais seguros
      {
        id: 14,
        question: "Show! Para fechar: voc√™ tem clareza absoluta do que cai na prova do seu concurso-alvo, ou sente que pode estar estudando conte√∫do desnecess√°rio?",
        options: [
          { text: "Tenho clareza total", next: 18 },
          { text: "Acho que perco tempo com coisa in√∫til", next: 17 }
        ]
      },
      // Se tem d√∫vida nos materiais
      {
        id: 15,
        question: "Errar na escolha de material √© um dos motivos de mais reprova√ß√£o. No Manual do Aprovado, voc√™ recebe indica√ß√£o direta do que funciona de verdade. Para finalizar: j√° escolheu uma √°rea/cargo para focar?",
        options: [
          { text: "Sim, j√° escolhi", next: 16 },
          { text: "Ainda estou perdido(a)", next: 17 }
        ]
      },
      // Tem foco
      {
        id: 16,
        question: (state) => `
          ${state.nome || "Concurseiro(a)"}, seu caminho est√° MUITO bem encaminhado!<br><br>
          <b>Mas todo aprovado que atinge const√¢ncia teve acesso a m√©todo de verdade, revis√£o leve e material validado.</b><br>
          <div class="cta-bar">
            <a href="LINK_KIWIFY" class="cta-final" target="_blank">ADQUIRIR AGORA</a>
            <a href="LINK_AMOSTRA" class="cta-demo" target="_blank">VER AMOSTRA</a>
          </div>
          <div style="font-size:1rem;margin-top:1.4rem;color:#576;">
            Dica: N√£o espere cair na zona do cansa√ßo ou do "quase l√°". O Manual do Aprovado √© o atalho para chegar no objetivo sem perder anos tentando e errando sozinho.
          </div>
        `,
        options: [
          { text: "Voltar ao in√≠cio", next: 0 }
        ]
      },
      // N√£o tem foco
      {
        id: 17,
        question: (state) => `
          Est√° vendo como falta de dire√ß√£o trava tudo?<br>
          O Manual do Aprovado foi criado pra destravar exatamente isso: foco, ciclo, revis√£o e escolha dos melhores materiais, direto no ponto.<br><br>
          <div class="cta-bar">
            <a href="LINK_KIWIFY" class="cta-final" target="_blank">ADQUIRIR AGORA</a>
            <a href="LINK_AMOSTRA" class="cta-demo" target="_blank">VER AMOSTRA</a>
          </div>
          <div style="font-size:1rem;margin-top:1.2rem;color:#577;">
            Baixe a amostra gratuita ou garanta j√° o seu. Se decidir estudar com m√©todo, a aprova√ß√£o vira quest√£o de tempo.
          </div>
        `,
        options: [
          { text: "Voltar ao in√≠cio", next: 0 }
        ]
      },
      // Fechamento para quem j√° domina tudo
      {
        id: 18,
        question: (state) => `
          ${state.nome || "Concurseiro(a)"}, voc√™ j√° est√° muito √† frente da m√©dia!<br>
          Que tal ter acesso ao mesmo m√©todo que j√° acelerou a aprova√ß√£o de centenas de pessoas?<br><br>
          <div class="cta-bar">
            <a href="LINK_KIWIFY" class="cta-final" target="_blank">ADQUIRIR AGORA</a>
            <a href="LINK_AMOSTRA" class="cta-demo" target="_blank">VER AMOSTRA</a>
          </div>
          <div style="font-size:1rem;margin-top:1.1rem;color:#577;">
            Evolua ainda mais e chegue mais r√°pido ao seu nome no Di√°rio Oficial.
          </div>
        `,
        options: [
          { text: "Voltar ao in√≠cio", next: 0 }
        ]
      }
    ];

    // ====== STATE & RENDER ======
    let state = { nome: "", step: 0 };
    let history = [];

    function renderStep(stepId) {
      const container = document.getElementById("quiz-card");
      const step = steps.find(s => s.id === stepId);
      updateProgressBar(stepId);
      let avatar = `<div class="avatar-float"></div>`;
      let html = avatar;
      let question = typeof step.question === "function" ? step.question(state) : step.question;
      html += `<div class="pergunta">${question}</div>`;

      if (step.type === "input") {
        html += `<input type="text" id="input-nome" placeholder="${step.inputPlaceholder || ""}" autocomplete="off" maxlength="30"/>
          <button class="btn-quiz" id="btn-next" disabled>Avan√ßar</button>`;
        container.innerHTML = html;
        const input = document.getElementById("input-nome");
        const btn = document.getElementById("btn-next");
        input.addEventListener("input", () => {
          btn.disabled = input.value.trim().length < 2;
        });
        btn.addEventListener("click", () => {
          history.push(stepId);
          state.nome = input.value.trim();
          state[stepId] = input.value.trim();
          goTo(step.next);
        });
        return;
      }

      if (step.options) {
        html += `<div class="opcoes">`;
        step.options.forEach((op, idx) => {
          html += `<button class="btn-quiz" data-idx="${idx}">${op.text}</button>`;
        });
        html += `</div>`;
      }

      if (history.length > 0) {
        html += `<button class="btn-voltar" id="btn-voltar">‚Üê Voltar</button>`;
      }
      container.innerHTML = html;

      if (step.options) {
        container.querySelectorAll(".btn-quiz").forEach((btn, idx) => {
          btn.addEventListener("click", () => {
            history.push(stepId);
            state[stepId] = idx;
            goTo(step.options[idx].next);
          });
        });
      }
      const btnVoltar = document.getElementById("btn-voltar");
      if (btnVoltar) {
        btnVoltar.addEventListener("click", () => {
          if (history.length > 0) {
            let prev = history.pop();
            goTo(prev, true);
          }
        });
      }
    }

    function goTo(stepId, isBack = false) {
      state.step = stepId;
      const container = document.getElementById("quiz-card");
      container.classList.remove("show");
      setTimeout(() => {
        renderStep(stepId);
        container.classList.add("show");
      }, isBack ? 120 : 220);
    }

    function updateProgressBar(stepId) {
      const total = 18;
      let pct = (stepId / total) * 100;
      if (pct > 100) pct = 100;
      document.getElementById("progress-bar").style.width = pct + "%";
    }

    window.onload = () => {
      renderStep(0);
      document.getElementById("quiz-card").classList.add("show");
    };
  </script>
</body>
</html>
